# This template uses jdk8 for verifying and deploying images
image: maven:3.6.3-jdk-11

variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  HEADLESS_TESTFX: "-Djava.awt.headless=true -Dtestfx.robot=glass -Dtestfx.headless=true -Dglass.platform=Monocle -Dmonocle.platform=Headless -Dprism.order=sw -Dprism.text=t2k -Dtestfx.setup.timeout=2500 -Dprism.verbose=true -Dprism.debug=true -Djavafx.verbose=true -Djavafx.debug=true"

  
before_script:
    - cd KodeX/

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - ${CI_PROJECT_DIR}/.m2
  
stages:
  - compile
  - test
  - checkstyle

java-compile:
  stage: compile
  script:
    - 'mvn $MAVEN_CLI_OPTS compile'
    
java-test:
  stage: test
  script:
    - apt-get update && apt-get install -y openjfx unzip && rm -f /var/lib/apt/lists/*_dists_*
    - if [[ "${TRAVIS_OS_NAME}" == linux ]]; then export DISPLAY=:99.0; sh -e /etc/init.d/xvfb start; fi
    - if [[ "${TRAVIS_OS_NAME}" == osx ]]; then brew update; brew cask reinstall caskroom/versions/java8; fi
    # surefire blocks propagation of properties that are not set inside argLine
    - 'mvn clean install -Dtestfx.robot=glass -Dglass.platform=Monocle -Dmonocle.platform=Headless -Dprism.order=sw'
    - 'mvn verify -f pom.xml $MAVEN_CLI_OPTS -DargLine=\"$HEADLESS_TESTFX\" -e'
    - 'cat target/jacoco-report/index.html'
      
java-checkstyle:
  stage: checkstyle
  script:
    - 'mvn $MAVEN_CLI_OPTS checkstyle:check'
  allow_failure: true