<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>edu.kit.scc.git</groupId>
	<artifactId>KodeX</artifactId>
	<version>alpha</version>
	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
	</properties>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.1.1</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>codestyle/google_checks.xml</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<dependencies>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>11</version>
		</dependency>
		<dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>11</version>
        </dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-graphics 
				</artifactId>
			<version>11</version>
			<classifier>win</classifier>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-graphics 
				</artifactId>
			<version>11</version>
			<classifier>linux</classifier>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-graphics</artifactId>
			<version>11</version>
			<classifier>mac</classifier>
		</dependency>
		<dependency>
			<groupId>org.kordamp.ikonli</groupId>
			<artifactId>ikonli-materialdesign-pack</artifactId>
			<version>11.5.0</version>
		</dependency>
		<dependency>
			<groupId>org.kordamp.ikonli</groupId>
			<artifactId>ikonli-javafx</artifactId>
			<version>11.5.0</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.7.0-M1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.7.0-M1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>3.4.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testfx</groupId>
			<artifactId>testfx-core</artifactId>
			<version>4.0.16-alpha</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testfx</groupId>
			<artifactId>testfx-junit5</artifactId>
			<version>4.0.16-alpha</version>
			<scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>org.testfx</groupId>
		    <artifactId>openjfx-monocle</artifactId>
		    <version>jdk-11+26</version>
		    <scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-checkstyle-plugin</artifactId>
			<version>3.1.1</version>
			<type>maven-plugin</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-maven-plugin</artifactId>
			<version>0.0.4</version>
			<type>maven-plugin</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>javase</artifactId>
			<version>3.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-plugin</artifactId>
			<version>3.0.0-M5</version>
			<type>maven-plugin</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>0.8.5</version>
			<type>maven-plugin</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.7</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.6</version>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.0.0-M5</version>
					<configuration>
						<argLine>
							--add-exports javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
							--add-exports javafx.graphics/com.sun.glass.ui=ALL-UNNAMED
							--add-opens javafx.graphics/com.sun.glass.ui=ALL-UNNAMED
							--add-opens javafx.graphics/com.sun.javafx.application=ALL-UNNAMED
							--add-opens kodex.KodeX/kodex.plugininterface=ALL-UNNAMED
							--add-opens kodex.KodeX/kodex.presenter=ALL-UNNAMED
							--add-opens kodex.KodeX/kodex.standardplugins=ALL-UNNAMED
							--add-opens kodex.KodeX/kodex.standardplugins.colorimageprocedure=ALL-UNNAMED
							--add-opens kodex.KodeX/kodex.standardplugins.colorimageprocedure.presenter=ALL-UNNAMED
                            --add-opens kodex.KodeX/kodex.standardplugins.rle=ALL-UNNAMED
                            --add-opens kodex.KodeX/kodex.standardplugins.rle.presenter=ALL-UNNAMED
                            --add-opens kodex.KodeX/kodex.standardplugins.rle.model.steps=ALL-UNNAMED
                            --add-opens kodex.KodeX/kodex.standardplugins.qrcode=ALL-UNNAMED
                            --add-opens kodex.KodeX/kodex.standardplugins.qrcode.presenter=ALL-UNNAMED
                            --add-opens kodex.KodeX/kodex.standardplugins.bwimageprocedure=ALL-UNNAMED
                            --add-opens kodex.KodeX/kodex.standardplugins.bwimageprocedure.presenter=ALL-UNNAMED
                            --add-opens kodex.KodeX/kodex.standardplugins.greyscaleimageprocedure=ALL-UNNAMED
                            --add-opens kodex.KodeX/kodex.standardplugins.greyscaleimageprocedure.presenter=ALL-UNNAMED
						</argLine>
						<useManifestOnlyJar>false</useManifestOnlyJar>
						<useSystemClassLoader>true</useSystemClassLoader>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>3.1.1</version>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>8.35</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.openjfx</groupId>
					<artifactId>javafx-maven-plugin</artifactId>
					<version>0.0.4</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.5</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<release>11</release>
				</configuration>
			</plugin>
			<plugin>
				<groupId>eu.numberfour.maven.plugins</groupId>
				<artifactId>file-list-maven-plugin</artifactId>
				<version>1.0.0</version>
				<configuration>
					<baseDir>${basedir}/target/classes/kodex/model/languages</baseDir>
					<outputFile>${basedir}/target/classes/kodex/model/languages/language-files-list.json</outputFile>
					<includes>Languages*.properties</includes>
				</configuration>
				<executions>
					<execution>
						<id>create-file-list</id>
						<phase>compile</phase>
						<goals>
							<goal>list</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<executions>
					<execution>
						<id>default-test</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.openjfx</groupId>
				<artifactId>javafx-maven-plugin</artifactId>
				<configuration>
					<mainClass>kodex.KodeX/kodex.Main</mainClass>
					<compress>2</compress>
					<noHeaderFiles>true</noHeaderFiles>
					<noManPages>true</noManPages>
					<launcher>launchKodex</launcher>
					<jlinkImageName>kodex</jlinkImageName>
					<jlinkZipName>kodexzip</jlinkZipName>
					<stripDebug>true</stripDebug>
				</configuration>
				<!-- <executions> <execution> <packaging>jar</packaging> <id>jlink-compile</id> 
					<phase>compile</phase> <goals> <goal>jlink</goal> </goals> </execution> </executions> -->
			</plugin>
			<plugin> <!--Only builds when all checkstyle rules are followed. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<configuration>
					<configLocation>codestyle/google_checks.xml</configLocation>
					<excludes>**/module-info.java,**/target/**/*</excludes>
					<encoding>UTF-8</encoding>
					<consoleOutput>true</consoleOutput>
					<failsOnError>true</failsOnError>
					<violationSeverity>warning</violationSeverity>
					<failOnViolation>true</failOnViolation>
					<linkXRef>false</linkXRef>
				</configuration>
				<!-- <executions> -->
				<!-- <execution> -->
				<!-- <id>check-validate</id> -->
				<!-- <phase>validate</phase> -->
				<!-- <goals> -->
				<!-- <goal>check</goal> -->
				<!-- </goals> -->
				<!-- </execution> -->
				<!-- </executions> -->
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<!-- attached to Maven test phase -->
					<execution>
						<id>default-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<outputDirectory>target/jacoco-report</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.2.4</version>
				<configuration>
					<artifactSet>
						<excludes>
							<exclude>module-info.java</exclude>
						</excludes>
					</artifactSet>
					<keepServices>true</keepServices>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<filters>
								<filter>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>kodex.Main</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.moditect</groupId>
				<artifactId>moditect-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-module-infos</id>
						<phase>package</phase>
						<goals>
							<goal>add-module-info</goal>
						</goals>
						<configuration>
							<overwriteExistingFiles>true</overwriteExistingFiles>
							<module>
								<moduleInfoFile>
									src/main/java/module-info.java
								</moduleInfoFile>
							</module>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>